name: Build Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        config:
          - {os: windows-latest, compiler: msvc, triplet: x64-windows}
          - {os: ubuntu-latest, compiler: gcc, triplet: x64-linux}
    
    runs-on: ${{ matrix.config.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install System Dependencies
      shell: bash
      run: |
        if [ "${{ matrix.config.os }}" == "ubuntu-latest" ]; then
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build
        fi

    - name: Setup vcpkg
      shell: bash
      run: |
        git clone https://github.com/microsoft/vcpkg
        echo "VCPKG_ROOT=${GITHUB_WORKSPACE}/vcpkg" >> $GITHUB_ENV

    - name: Bootstrap vcpkg
      shell: bash
      run: |
        if [ "${{ matrix.config.os }}" == "windows-latest" ]; then
          ./vcpkg/bootstrap-vcpkg.bat
        else
          ./vcpkg/bootstrap-vcpkg.sh
        fi

    - name: Install Dependencies
      shell: bash
      run: |
        ./vcpkg/vcpkg install --triplet ${{ matrix.config.triplet }}

    - name: Configure CMake
      shell: bash
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE="${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake" \
          -DCMAKE_MAKE_PROGRAM=ninja \
          -G Ninja

    - name: Build
      shell: bash
      run: |
        cmake --build build --config Release --parallel $(nproc)