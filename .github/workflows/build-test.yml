name: Build Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        config:
          - {os: windows-latest, compiler: msvc}
          - {os: ubuntu-latest, compiler: gcc}
    
    runs-on: ${{ matrix.config.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Linux Dependencies
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake gcc g++ make ninja-build

    - name: Install vcpkg
      shell: bash
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        if [ "${{ matrix.config.os }}" == "windows-latest" ]; then
          ./vcpkg/bootstrap-vcpkg.bat
        else
          ./vcpkg/bootstrap-vcpkg.sh
        fi

    - name: Configure CMake
      shell: bash
      run: |
        mkdir -p build
        cd build
        if [ "${{ matrix.config.os }}" == "windows-latest" ]; then
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="${GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake"
        else
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="${GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake" -G "Unix Makefiles"
        fi

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config Release